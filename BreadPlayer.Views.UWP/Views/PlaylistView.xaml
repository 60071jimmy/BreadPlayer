<Page
    x:Class="BreadPlayer.PlaylistView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BreadPlayer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Services="using:BreadPlayer.Services"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" xmlns:Extensions="using:BreadPlayer.Extensions" xmlns:Behaviours="using:BreadPlayer.Behaviours" 
          xmlns:StateTriggers="using:BreadPlayer.StateTriggers"
     xmlns:Converters="using:BreadPlayer.Converters"
mc:Ignorable="d">
    <Page.Resources>
        <Converters:BoolToSelectionModeConverter x:Key="BoolToSelectionMode"/>

        <Style TargetType="ListViewItem" x:Key="PlaylistItemExpanded">
            <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
            <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{ThemeResource SystemControlForegroundBaseHighBrush}" />
            <Setter Property="TabNavigation" Value="Local"/>
            <Setter Property="IsHoldingEnabled" Value="True"/>
            <Setter Property="Padding" Value="12,0,12,0"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}"/>
            <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}"/>
            <Setter Property="UseSystemFocusVisuals" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Grid x:Name="ContentBorder"
    Background="Transparent"
    BorderBrush="{TemplateBinding BorderBrush}"
    BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid.Resources>

                                <MenuFlyout x:Name="contextMenu" x:Key="Flyout">
                                    <MenuFlyoutItem x:Name="playMenuItem" Text="Play" DataContext="{StaticResource LibVM}"
                                        CommandParameter="{Binding ElementName=ContentPresenter, Path=Content}"
                                          Command="{Binding Path=PlayCommand}"/>
                                    <!--<MenuFlyoutSubItem x:Name="addto" Extensions:MenuExtension.MyItems="{Binding Options}" DataContext="{StaticResource LibVM}" Text="Add to">
                                        </MenuFlyoutSubItem>-->
                                    <MenuFlyoutItem Text="Open Song Location"
                                        DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Command="{Binding OpenSongLocationCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                                    <MenuFlyoutItem Text="Change Album Art"
                                        DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Command="{Binding ChangeAlbumArtCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                                    <MenuFlyoutItem Text="Stop Playing After This Song"
                                        DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Command="{Binding Path=StopAfterCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>
                                    <MenuFlyoutItem Text="Delete from playlist"
                                        Command="{Binding Source={StaticResource PlaylistVM}, Path=DeleteCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}}">

                                    </MenuFlyoutItem>
                                    <MenuFlyoutItem Text="Properties"
                                        DataContext="{Binding ElementName=playMenuItem, Path=DataContext}"
                                        Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Command="{Binding ShowPropertiesCommand}"
                                        CommandParameter="{Binding ElementName=playMenuItem, Path=CommandParameter}"/>

                                </MenuFlyout>


                                <Extensions:BindableFlyout x:Key="PlaylistsFlyout" ItemsSource="{Binding Source={StaticResource LibVM}, Path=OptionItems}" Placement="Right"></Extensions:BindableFlyout>


                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CustomStates">
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding ElementName=ContentPresenter, Path=Content.State, Converter={StaticResource EnumToVisibility}}"/>
                                        </VisualState.StateTriggers>
                                        <Storyboard x:Name="myStoryboard"  AutoReverse="True" RepeatBehavior="Forever">
                                            <ColorAnimation Storyboard.TargetName="Animie"  Storyboard.TargetProperty="(Rectangle.Fill).(SolidColorBrush.Color)" From="{Binding Source={ThemeResource SystemAccentColor1}, Path=Color }" To="DeepSkyBlue" Duration="0:0:6"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>                              
                                <VisualStateGroup x:Name="CustomStates3">
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <StateTrigger IsActive="{Binding ElementName=ContentPresenter, Path=Content.State, Converter={StaticResource EnumToVisibility}}"/>

                                        </VisualState.StateTriggers>
                                        <Storyboard x:Name="myStorybosard"  AutoReverse="True" RepeatBehavior="Forever">
                                            <ColorAnimation Storyboard.TargetName="Buttons_Stack" Storyboard.TargetProperty="(StackPanel.Background).(SolidColorBrush.Color)" From="{Binding Source={ThemeResource SystemAccentColor1}, Path=Color}" To="DeepSkyBlue" Duration="0:0:6"/>

                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal">
                                        <Storyboard>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOver">
                                        <VisualState.Setters>
                                            <Setter Target="Buttons_Stack.Background" Value="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                                        </VisualState.Setters>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListLowBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button2" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button2" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Selected">
                                        <!--<VisualState.Setters>
                                                <Setter Target="Buttons_Stack.Background" Value="{ThemeResource SystemControlBackgroundAccentBrush}"/>
                                           </VisualState.Setters>-->
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
             Storyboard.TargetProperty="Opacity"
             Duration="0:0:0"
             To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button2" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlBackgroundAccentBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PointerOverSelected">
                                        <!--<VisualState.Setters>
                                                <Setter Target="Buttons_Stack.Background" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>
                                                -->
                                        <!--<Setter Target="button2.Background" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}"/>-->
                                        <!--
                                            </VisualState.Setters>-->
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
             Storyboard.TargetProperty="Opacity"
             Duration="0:0:0"
             To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button2" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentMediumBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerUpThemeAnimation Storyboard.TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="PressedSelected">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="MultiSelectCheck"
             Storyboard.TargetProperty="Opacity"
             Duration="0:0:0"
             To="1"/>
                                            <DoubleAnimation Storyboard.TargetName="BorderBackground"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="1"/>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="button2" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderBackground" Storyboard.TargetProperty="Fill">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightListAccentHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenter" Storyboard.TargetProperty="Foreground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{ThemeResource SystemControlHighlightAltBaseHighBrush}" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <PointerDownThemeAnimation TargetName="ContentPresenter" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DisabledStates">
                                    <VisualState x:Name="Enabled"/>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="{ThemeResource ListViewItemDisabledThemeOpacity}"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="MultiSelectStates">
                                    <VisualState x:Name="MultiSelectDisabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                            Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="-32" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                           Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="0"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="32" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                           Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.333" Value="Collapsed" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Source={StaticResource Core}, Path=DynamicMargin}" />
                                            </ObjectAnimationUsingKeyFrames>

                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultiSelectEnabled">
                                        <Storyboard>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheckBoxTransform"
                            Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectClipTransform"
                           Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterTranslateTransform"
                           Storyboard.TargetProperty="X">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-32"/>
                                                <SplineDoubleKeyFrame KeyTime="0:0:0.333" Value="0" KeySpline="0.1,0.9,0.2,1"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectSquare" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MultiSelectCheck" Storyboard.TargetProperty="Visibility">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Visible" />
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterGrid" Storyboard.TargetProperty="Margin">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="48,0,0,0" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>

                                <VisualStateGroup x:Name="ReorderHintStates">
                                    <VisualState x:Name="NoReorderHint"/>
                                    <VisualState x:Name="BottomReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Bottom" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="TopReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Top" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="RightReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Right" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="LeftReorderHint">
                                        <Storyboard>
                                            <DragOverThemeAnimation TargetName="ContentBorder" ToOffset="{ThemeResource ListViewItemReorderHintThemeOffset}" Direction="Left" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NoReorderHint" GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DragStates">
                                    <VisualState x:Name="NotDragging" />
                                    <VisualState x:Name="Dragging">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                            <DragItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggingTarget">
                                        <Storyboard>
                                            <DropTargetItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingPrimary">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="ContentBorder"
             Storyboard.TargetProperty="Opacity"
             Duration="0"
             To="{ThemeResource ListViewItemDragThemeOpacity}" />
                                            <DragItemThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MultipleDraggingSecondary">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="DraggedPlaceholder">
                                        <Storyboard>
                                            <FadeOutThemeAnimation TargetName="ContentBorder" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="NotDragging" GeneratedDuration="0:0:0.2"/>
                                    </VisualStateGroup.Transitions>
                                </VisualStateGroup>
                                <VisualStateGroup>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="0"/>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="Buttons_Stack.(Grid.Column)" Value="6"/>
                                            <Setter Target="playBtn.Height" Value="75"/>
                                            <Setter Target="button2.Height" Value="75"/>
                                            <Setter Target="Buttons_Stack.Height" Value="75"/>
                                            <Setter Target="Buttons_Stack.Margin" Value="-30,0,0,0"/>
                                            <Setter Target="ContentPresenterGrid.Margin" Value="34,0,0,0"/>
                                            <Setter Target="FavoriteButton.Margin" Value="-25,0,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="600"/>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Margin" Value="48,0,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <AdaptiveTrigger MinWindowWidth="1200"/>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="ContentPresenterGrid.Margin" Value="48,0,0,0"/>
                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CustomStates4">
                                    <VisualState>
                                        <VisualState.StateTriggers>
                                            <!--<StateTrigger IsActive="{Binding Source={StaticResource Core}, Path=IsTouchEnabledDevice}"/>-->
                                            <StateTriggers:DeviceFamilyStateTrigger DeviceFamily="Mobile"/>
                                        </VisualState.StateTriggers>
                                        <VisualState.Setters>
                                            <Setter Target="playBtn.Visibility" Value="Collapsed"/>
                                            <Setter Target="Buttons_Stack.Width" Value="50"/>
                                            <Setter Target="Buttons_Stack.Margin" Value="-130,0,0,0"/>

                                        </VisualState.Setters>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <Rectangle x:Name="BorderBackground"
        IsHitTestVisible="False"
        Fill="{ThemeResource SystemControlHighlightListAccentLowBrush}"
        Opacity="0"
        Control.IsTemplateFocusTarget="True">

                            </Rectangle>
                            <Rectangle
x:Name="Animie"
Fill="Transparent"
Control.IsTemplateFocusTarget="True"/>


                            <Grid x:Name="ContentPresenterGrid"
  Background="Transparent"
  Margin="0,0,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RenderTransform>
                                    <TranslateTransform x:Name="ContentPresenterTranslateTransform"/>
                                </Grid.RenderTransform>

                                <ContentPresenter x:Name="ContentPresenter"
              ContentTransitions="{TemplateBinding ContentTransitions}"
              ContentTemplate="{TemplateBinding ContentTemplate}" Grid.ColumnSpan="9"
              Content="{TemplateBinding Content}" Margin="0,0,32,0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Center"
                            ></ContentPresenter>
                                <Border Background="Transparent" Tag="{TemplateBinding Content}" ToolTipService.ToolTip="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content.Title}" Height="50" Grid.ColumnSpan="9">
                                    <Interactivity:Interaction.Behaviors>
                                        <Core:EventTriggerBehavior EventName="DoubleTapped">
                                            <Core:InvokeCommandAction CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" Command="{Binding Source={StaticResource LibVM},Path=PlayCommand}"></Core:InvokeCommandAction>
                                        </Core:EventTriggerBehavior>
                                        <Core:EventTriggerBehavior EventName="RightTapped">
                                            <Core:EventTriggerBehavior.Actions>
                                                <Core:InvokeCommandAction  CommandParameter="{Binding ElementName=ContentPresenter, Path=Content}"
                                    Command="{Binding Path=PlayCommand}"/>
                                                <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                                            </Core:EventTriggerBehavior.Actions>
                                        </Core:EventTriggerBehavior>
                                        <Core:EventTriggerBehavior EventName="Tapped">
                                            <Core:EventTriggerBehavior.Actions>
                                                <Core:CallMethodAction MethodName="PlayOnTap" TargetObject="{StaticResource LibVM}"></Core:CallMethodAction>
                                            </Core:EventTriggerBehavior.Actions>
                                        </Core:EventTriggerBehavior>
                                        <Core:EventTriggerBehavior EventName="Holding">
                                            <Behaviours:OpenMenuFlyoutAction Parameter="{StaticResource Flyout}"/>
                                        </Core:EventTriggerBehavior>
                                    </Interactivity:Interaction.Behaviors>
                                </Border>
                                <ToggleButton Name="FavoriteButton" Content="&#xEB51;" Command="{Binding Source={StaticResource LibVM}, Path=AddToFavoritesCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}" DataContext="{Binding ElementName=ContentPresenter, Path=Content}" IsChecked="{Binding Path=IsFavorite, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Margin="-40,0,0,0" Width="40" Height="40" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Style="{StaticResource FavoriteButtonStyle}">
                                </ToggleButton>
                                <StackPanel Grid.Column="1" Width="100" Margin="-160,0,0,0" Visibility="{Binding ElementName=button2, Path=Visibility}" Height="50" VerticalAlignment="Stretch" Background="Transparent" x:Name="Buttons_Stack" Orientation="Horizontal">
                                    <Button x:Name="playBtn" Grid.Column="1" ToolTipService.ToolTip="Play" DataContext="{Binding ElementName=LayoutRoot, Path=DataContext}"
                                          Width="50" Visibility="Visible"
                                          VerticalAlignment="Stretch" Background="Transparent"
                                          Height="50" FontSize="18" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
                                          Command="{Binding Source={StaticResource LibVM}, Path=PlayCommand}" Content="&#xE102;" Style="{StaticResource HyperlinkBtn}" FontFamily="Segoe MDL2 Assets">

                                    </Button>
                                    <Button Grid.Column="2" x:Name="button2" Content="&#xE74D;"
            IsDoubleTapEnabled="False" FontSize="18"
            Visibility="Collapsed" ToolTipService.ToolTip="Add this song to playlist."
            Height="50"  VerticalAlignment="Stretch"  Background="Transparent"
            Width="50" Style="{StaticResource HyperlinkBtn}"
                        DataContext="{Binding ElementName=plistPage, Path=DataContext}"
                        Command="{Binding DeleteCommand}" CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}"
            FontFamily="Segoe MDL2 Assets"></Button>
                                </StackPanel>
                            </Grid>
                         
                            <Border x:Name="MultiSelectSquare"
    BorderBrush="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
    BorderThickness="1"
    Width="20"
    Height="20" Background="Transparent"
    Margin="12,0,0,0"
    VerticalAlignment="Center"
    HorizontalAlignment="Left"
    Visibility="Collapsed" >
                                <Border.Clip>
                                    <RectangleGeometry Rect="0,0,20,20">
                                        <RectangleGeometry.Transform>
                                            <TranslateTransform x:Name="MultiSelectClipTransform"/>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Border.Clip>
                                <Border.RenderTransform>
                                    <TranslateTransform x:Name="MultiSelectCheckBoxTransform"/>
                                </Border.RenderTransform>
                                <FontIcon x:Name="MultiSelectCheck"
      FontFamily="{ThemeResource SymbolThemeFontFamily}"
      Glyph="&#xE73E;"
      FontSize="16"
      Foreground="{ThemeResource SystemControlForegroundBaseMediumHighBrush}"
      Visibility="Collapsed"
      Opacity="0"/>
                            </Border>


                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <MenuFlyout x:Key="ExtraMenuFlyout" MenuFlyoutPresenterStyle="{StaticResource CustomFlyoutPresenter}">
            <MenuFlyoutItem Text="Delete This Playlist" DataContext="{Binding Source={StaticResource PlaylistVM}}" Command="{Binding DeletePlaylistCommand}" />
            <MenuFlyoutItem Text="Rename This Playlist" DataContext="{Binding Source={StaticResource PlaylistVM}}" Command="{Binding RenamePlaylistCommand}"/>
            <MenuFlyoutItem Text="Enable Multi Selection" Command="{Binding Source={StaticResource LibVM}, Path=ChangeSelectionModeCommand}"/>
            <MenuFlyoutItem Text="Disable Multi Selection" IsEnabled="{Binding Source={StaticResource LibVM}, Path=IsMultiSelectModeEnabled}" Command="{Binding Source={StaticResource LibVM}, Path=ChangeSelectionModeCommand}"/>
        </MenuFlyout>
        <CollectionViewSource IsSourceGrouped="False" x:Key="Source" Source="{Binding Songs}"/>
    </Page.Resources>
    
        <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedMobileTemplate}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedNarrowTemplate}"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedTemplate}"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>

                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="headerText.TextAlignment" Value="Center" />
                        <Setter Target="headerText.FontSize" Value="44" />
                        <Setter Target="headerText.Margin" Value="0" />
                        <Setter Target="headerStack.Margin" Value="0,40,0,0" />
                        <Setter Target="headerDesc.Margin" Value="0" />
                        <Setter Target="headerDesc.TextAlignment" Value="Center" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>          
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <!--<RowDefinition Height="{Binding ElementName=playlistScrollViewer, Path=ActualHeight}"/>-->
            </Grid.RowDefinitions>
            <Border x:Name="art" Margin="0,-154,0,0" Height="354" VerticalAlignment="Top" >
                <Border.Background>
                    <ImageBrush Stretch="UniformToFill" ImageSource="{Binding PlaylistArt}"/>
                </Border.Background>
            <Grid>
                <Border Background="#99000000"/>
                <Grid Grid.Row="0" RequestedTheme="Dark" Margin="0,120,0,0">
                    <StackPanel x:Name="headerStack" Margin="35,0,0,0" Grid.Row="0" >
                        <TextBlock x:Name="headerText" MaxLines="3" TextWrapping="Wrap" TextTrimming="CharacterEllipsis" Text="{Binding Playlist.Name,Mode=TwoWay,UpdateSourceTrigger=Explicit, FallbackValue='Unknown Playlist'}" FontSize="60" FontWeight="Bold" FontFamily="Segoe UI Light"/>
                        <TextBlock x:Name="headerDesc" MaxLines="2" TextWrapping="WrapWholeWords" TextTrimming="CharacterEllipsis" Text="{Binding Playlist.Description, Mode=TwoWay,UpdateSourceTrigger=Explicit, FallbackValue='No Description'}" FontSize="24" FontWeight="Normal" FontFamily="Segoe UI Light"/>
                    </StackPanel>
                    <Grid VerticalAlignment="Bottom" Margin="15,0,15,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Grid.Column="0">
                            <TextBlock Text="{Binding TotalSongs,Mode=TwoWay,UpdateSourceTrigger=Explicit, FallbackValue='0 Songs'}" FontSize="15"></TextBlock>
                            <TextBlock Text="&#x2022;" FontSize="15" Margin="5,0,0,0"/>
                            <TextBlock Text="{Binding TotalMinutes,Mode=TwoWay,UpdateSourceTrigger=Explicit, FallbackValue='0 Minutes'}" FontSize="15" Margin="5,0,0,0"/>
                        </StackPanel>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Column="2">
                            <Button Style="{StaticResource HyperlinkBtn}" Padding="0,0,0,0" HorizontalAlignment="Center" Command="{Binding Source={StaticResource LibVM}, Path=PlayCommand}" CommandParameter="{Binding Path=Songs[0]}" RequestedTheme="Dark" Background="{x:Null}" Height="20">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontFamily="Segoe MDL2 Assets" FontSize="15" VerticalAlignment="Center" Text="&#xE102;"></TextBlock>
                                    <TextBlock FontFamily="Segoe UI" Text=" Play all" ></TextBlock>
                                </StackPanel>
                            </Button>
                            <Button Style="{StaticResource HyperlinkBtn}" Visibility="{Binding IsMenuVisible, Converter={StaticResource BoolToVisibilty}}" Flyout="{StaticResource ExtraMenuFlyout}" Padding="0,0,0,0" HorizontalAlignment="Center" Margin="10,0,0,0" Content="&#x2022;&#x2022;&#x2022;" RequestedTheme="Dark" Background="{x:Null}"></Button>
                        </StackPanel>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
     
        <ListView x:Name="fileBox" ScrollViewer.IsScrollInertiaEnabled="True" ShowsScrollingPlaceholders="True" ItemsSource="{Binding Source={StaticResource Source}, UpdateSourceTrigger=Explicit}" ScrollViewer.VerticalScrollBarVisibility="Auto" Grid.Row="1" Grid.RowSpan="3" ItemTemplate="{StaticResource MediafileUnselectedTemplate}" ItemContainerStyle="{StaticResource PlaylistItemExpanded}" Loaded="fileBox_Loaded"/>
    </Grid>
</Page>
