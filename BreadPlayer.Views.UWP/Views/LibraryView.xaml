<Page x:Name="LibView"
    x:Class="BreadPlayer.LibraryView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BreadPlayer"
    xmlns:controls="using:SplitViewMenu"
    xmlns:mf="using:BreadPlayer.Models"
    xmlns:Converter="using:BreadPlayer.Converters"
    xmlns:VM="using:BreadPlayer.ViewModels"
    xmlns:Common="using:BreadPlayer.Common"
    xmlns:Player="using:BreadPlayer.Core"
    xmlns:triggers="using:BreadPlayer.Common"  
    xmlns:blur="using:BreadPlayer.Effects"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" 
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" xmlns:Behaviours="using:BreadPlayer.Behaviours"
      xmlns:Media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    mc:Ignorable="d" DataContext="{Binding Source={StaticResource LibVM}}">
    <Page.Resources>

        <Converter:BoolToSelectionModeConverter x:Key="BoolToSelectionMode"/>

        <DataTemplate x:Key="MobileJumpListItemTemplate">
            <Button x:Name="alphabet" BorderBrush="{x:Null}" Width="60" BorderThickness="0" Height="60" FontSize="28" Background="Transparent" Content="{Binding}" FontFamily="Segoe UI Light" FontWeight="SemiLight" Style="{StaticResource HyperlinkBtn}">
                <Interactivity:Interaction.Behaviors>
                    <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=alphabet}">
                        <Core:EventTriggerBehavior.Actions>
                            <Core:ChangePropertyAction PropertyName="IsZoomedInViewActive" Value="True" TargetObject="{Binding ElementName=semanticZoom, Mode=OneWay}"/>
                        </Core:EventTriggerBehavior.Actions>
                    </Core:EventTriggerBehavior>
                </Interactivity:Interaction.Behaviors>
            </Button>
        </DataTemplate>
    </Page.Resources>

    <Grid Name="Grid" DataContext="{Binding Source={StaticResource LibVM}}">
        <Grid.Resources>
            <CollectionViewSource IsSourceGrouped="False" x:Key="Source" Source="{Binding TracksCollection.Elements}"/>
        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="187*"/>
            <ColumnDefinition Width="173*"/>
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
          <VisualStateGroup>
            <VisualState>
              <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="0"/>
              </VisualState.StateTriggers>
              <VisualState.Setters>
                <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedMobileTemplate}"/>
              </VisualState.Setters>
            </VisualState>
            <VisualState>
              <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="600"/>
              </VisualState.StateTriggers>
              <VisualState.Setters>
                <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedNarrowTemplate}"/>
              </VisualState.Setters>
            </VisualState>
            <VisualState>
              <VisualState.StateTriggers>
                <AdaptiveTrigger MinWindowWidth="1200"/>
              </VisualState.StateTriggers>
              <VisualState.Setters>
                <Setter Target="fileBox.ItemTemplate" Value="{StaticResource MediafileUnselectedTemplate}"/>
              </VisualState.Setters>
            </VisualState>
          </VisualStateGroup>
          <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="800" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="headerText.FontSize" Value="44" />
                        <Setter Target="lonelyTxt.FontSize" Value="44"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="headerText.FontSize" Value="20" />
                        <Setter Target="headerText.RequestedTheme" Value="Dark" />
                        <Setter Target="headerText.Margin" Value="50,10,0,0" />
                        <Setter Target="headerText.(Grid.Row)" Value="0" />
                        <Setter Target="semanticZoom.(Grid.Row)" Value="1" />
                        <Setter Target="semanticZoom.(Grid.RowSpan)" Value="2" />
                        <Setter Target="lonelyTxt.FontSize" Value="44"/>
                        <Setter Target="alphabetList.ItemTemplate" Value="{StaticResource MobileJumpListItemTemplate}"/>
                        
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>
        <Grid.Transitions>
            <TransitionCollection>
                <EntranceThemeTransition IsStaggeringEnabled="True"
                            FromHorizontalOffset="200"/>
            </TransitionCollection>
        </Grid.Transitions>      
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="47"/>
            <RowDefinition Height="13" MinHeight="13"/>
            <RowDefinition Height="57*"/>
        </Grid.RowDefinitions>
       
        <TextBlock Visibility="Collapsed" x:Name="headerText" Text="{Binding Header, FallbackValue='Music Library'}" FontSize="44" FontFamily="Segoe UI" FontWeight="Bold" Margin="35,20,0,0.4" Grid.RowSpan="2"/>
       
        <SemanticZoom x:Name="semanticZoom" ViewChangeStarted="semanticZoom_ViewChangeStarted" Grid.Row="2" Grid.ColumnSpan="2" ScrollViewer.ZoomMode="Enabled">
            <SemanticZoom.ZoomedInView>
                <ListView AllowDrop="True" IsMultiSelectCheckBoxEnabled="True" Behaviours:ListViewService.FocusBeforeSelect="True" SelectionMode="{Binding Path=IsMultiSelectModeEnabled, Converter={StaticResource BoolToSelectionMode}, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IncrementalLoadingThreshold="50" IncrementalLoadingTrigger="Edge" DataFetchSize="50" ScrollViewer.IsScrollInertiaEnabled="True" x:Name="fileBox" ScrollViewer.VerticalScrollBarVisibility="Auto" ItemContainerStyle="{StaticResource ListViewItemExpanded}" ItemsSource="{Binding Source={StaticResource Source}, UpdateSourceTrigger=Explicit}" Grid.Row="2" Grid.ColumnSpan="2" DragOver="fileBox_DragOver">
                    
                    <ListView.ItemsPanel>
                        <ItemsPanelTemplate >
                            <ItemsStackPanel Orientation="Vertical">
                                <ItemsStackPanel.ChildrenTransitions>
                                    <TransitionCollection>
                                        <EntranceThemeTransition
                            FromHorizontalOffset="200" />
                                    </TransitionCollection>
                                </ItemsStackPanel.ChildrenTransitions>
                            </ItemsStackPanel>
                        </ItemsPanelTemplate>
                    </ListView.ItemsPanel>
                    <Interactivity:Interaction.Behaviors>
                        <Core:EventTriggerBehavior EventName="KeyDown" SourceObject="{Binding ElementName=fileBox}">
                            <Core:EventTriggerBehavior.Actions>
                                <Behaviours:InvokeCommandByKeyDown CommandParameter="{Binding ElementName=fileBox}" Command="{Binding DeleteCommand}" PressedKey="Delete" DoubleKeyCommand="False"/>
                                <Behaviours:InvokeCommandByKeyDown CommandParameter="{Binding ElementName=fileBox, Path=SelectedItem}" Command="{Binding PlayCommand}" PressedKey="P" DoubleKeyCommand="True"/>
                            </Core:EventTriggerBehavior.Actions>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="SelectionChanged">
                            <Core:EventTriggerBehavior.Actions>
                                <Core:CallMethodAction MethodName="SelectionChanged" TargetObject="{Binding Source={StaticResource LibVM}}"/>
                                <!--<Core:InvokeCommandAction  CommandParameter="{Binding ElementName=fileBox}" Command="{Binding SelectionChangedCommand}"/>-->
                            </Core:EventTriggerBehavior.Actions>
                        </Core:EventTriggerBehavior>
                        <Core:EventTriggerBehavior EventName="Drop">
                            <Core:CallMethodAction MethodName="DropFiles" TargetObject="{Binding Source={StaticResource LibVM}}"/>
                        </Core:EventTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>
                    <ListView.GroupStyle>
                        <GroupStyle HidesIfEmpty="True">
                            <GroupStyle.HeaderTemplate>
                                <DataTemplate>
                                    <Button x:Name="groupBtn" Content="{Binding Key}" FontSize="26" FontFamily="Segoe UI Light" Background="Transparent" Margin="10,0,0,0" FontWeight="SemiLight" Style="{StaticResource HyperlinkBtn}">
                                        <Interactivity:Interaction.Behaviors>
                                            <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=groupBtn}">
                                                <Core:EventTriggerBehavior.Actions>
                                                    <Core:ChangePropertyAction PropertyName="Visibility" Value="Visible" TargetObject="{Binding ElementName=backBtn}"/>
                                                </Core:EventTriggerBehavior.Actions>  
                                            </Core:EventTriggerBehavior>
                                        </Interactivity:Interaction.Behaviors>
                                    </Button>

                                    <!--<TextBlock Text='{Binding Key}' Foreground="Gray" FontSize="25" Margin="5" />-->
                                </DataTemplate>
                            </GroupStyle.HeaderTemplate>
                        </GroupStyle>
                    </ListView.GroupStyle>
                </ListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>
                <GridView x:Name="alphabetList" VerticalAlignment="Center" HorizontalAlignment="Center" MaxWidth="660" ItemsSource="{Binding AlphabetList}" Margin="0">
                    <GridView.ItemTemplate>
                        <DataTemplate>
                            <Button x:Name="alphabet" BorderBrush="{x:Null}" MinWidth="90" BorderThickness="0" Height="60" FontSize="36" Background="Transparent" Content="{Binding}" FontFamily="Segoe UI Light" FontWeight="SemiLight" Style="{StaticResource HyperlinkBtn}">
                                <Interactivity:Interaction.Behaviors>
                                    <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=alphabet}">
                                        <Core:EventTriggerBehavior.Actions>
                                            <Core:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=backBtn}"/>
                                            <Core:ChangePropertyAction PropertyName="IsZoomedInViewActive" Value="True" TargetObject="{Binding ElementName=semanticZoom, Mode=OneWay}"/>
                                        </Core:EventTriggerBehavior.Actions>
                                    </Core:EventTriggerBehavior>
                                </Interactivity:Interaction.Behaviors>
                            </Button>
                        </DataTemplate>
                    </GridView.ItemTemplate>                  
                </GridView>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <Button x:Name="backBtn" Background="{x:Null}" Visibility="Collapsed" FontSize="30" BorderThickness="0" Content="&#xE72B;" FontFamily="Segoe MDL2 Assets" Grid.Row="2" VerticalAlignment="Top" HorizontalAlignment="Right"  Style="{StaticResource HyperlinkBtn}">
            <Interactivity:Interaction.Behaviors>
                <Core:EventTriggerBehavior EventName="Click" SourceObject="{Binding ElementName=backBtn}">
                    <Core:EventTriggerBehavior.Actions>
                        <Core:ChangePropertyAction PropertyName="IsZoomedInViewActive" Value="True" TargetObject="{Binding ElementName=semanticZoom, Mode=OneWay}"/>
                        <Core:ChangePropertyAction PropertyName="Visibility" Value="Collapsed" TargetObject="{Binding ElementName=backBtn}"/>
                    </Core:EventTriggerBehavior.Actions>
                </Core:EventTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </Button>
        <StackPanel Grid.Row="2" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.ColumnSpan="2" Visibility="{Binding Path=SongCount, UpdateSourceTrigger=Explicit, Converter={StaticResource BoolToVisibilty}}">
            <TextBlock x:Name="lonelyTxt" Text="Its lonely here :(" FontSize="72" FontFamily="Segoe UI Light" FontWeight="ExtraLight" Foreground="{ThemeResource ThemeForeground}"/>
            <Button Content="Add some songs" Background="Transparent" HorizontalAlignment="Center" FontSize="22" Command="{Binding Source={StaticResource Core}, Path=SettingsVM.LoadCommand}" Foreground="{ThemeResource ThemeForeground}" Style="{StaticResource HyperlinkBtn}"/>
        </StackPanel>        
        <Grid Grid.ColumnSpan="2" Grid.RowSpan="3" Visibility="Collapsed" Background="{ThemeResource ThemeBackground}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GridView VerticalAlignment="Center" HorizontalAlignment="Center" ItemsSource="{Binding AlphabetList}" Margin="0">
                <GridView.ItemTemplate>
                    <DataTemplate>
                        <Button Width="60" Height="40" FontSize="26" Background="Transparent" Content="{Binding}" Foreground="Black" Style="{StaticResource HyperlinkBtn}"/>
                    </DataTemplate>
                </GridView.ItemTemplate>
            </GridView>
        </Grid>
        <Grid x:Name="loadingOverlay" Grid.ColumnSpan="2" Grid.RowSpan="3" Background="{ThemeResource ImageFadeBrush}" Visibility="{Binding IsLibraryLoading, UpdateSourceTrigger=Explicit, FallbackValue=Collapsed, Converter={StaticResource BoolToVisibilty}}">
            <StackPanel HorizontalAlignment="Stretch" VerticalAlignment="Center">
                <!--<Grid>
                    <Ellipse x:Name="e1" HorizontalAlignment="Center" Margin="10,0,0,0" Visibility="Visible" Width="150" Height="{Binding ElementName=e1,Path=Width}" Stroke="{ThemeResource SecondCircleBrush}" StrokeThickness="25" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <ScaleTransform ScaleX="0" ScaleY="0"/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                    <Ellipse x:Name="e2" HorizontalAlignment="Center" Margin="10,0,0,0" Visibility="{Binding ElementName=e1, Path=Visibility}" Width="150" Height="{Binding ElementName=e2, Path=Width}" Stroke="{ThemeResource SystemControlBackgroundAccentBrush}" StrokeThickness="25" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <ScaleTransform ScaleX="0" ScaleY="0"/>
                        </Ellipse.RenderTransform>
                    </Ellipse>
                </Grid>-->
                <TextBlock x:Name="statusTxt" Margin="0,10,0,0" TextAlignment="Center" Text="{Binding Path=Status, UpdateSourceTrigger=Explicit}" FontSize="38" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
            </StackPanel>
        </Grid>
        <!--<Grid Height="75" Grid.Row="2" Background="Black" DataContext="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Content}">
            <TextBlock TextAlignment="Center" HorizontalAlignment="Center" TextTrimming="CharacterEllipsis" Grid.Column="0" VerticalAlignment="Center">
                        <Run Text="Hello"/>
                        <LineBreak/>
                        <Run Text="Hello" Foreground="Gray"/>
                        <Run Text=" &#x2022; " FontWeight="Bold" Foreground="Gray"/>
                        <Run Text="Hello" Foreground="Gray"/>
            </TextBlock>
            --><!--<TextBlock Text="{Binding Path=Length}" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,20,0"/>--><!--
        </Grid>-->
        <Interactivity:Interaction.Behaviors>
            <Core:EventTriggerBehavior EventName="Loaded">
                <Core:InvokeCommandAction Command="{Binding InitCommand}" CommandParameter="{Binding ElementName=Grid}"/>
            </Core:EventTriggerBehavior>
        </Interactivity:Interaction.Behaviors>
    
    
    </Grid>

</Page>
