<Page
    x:Class="BreadPlayer.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:BreadPlayer"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:VM="using:BreadPlayer.ViewModels"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:Converters="using:BreadPlayer.Converters"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core" xmlns:Behaviours="using:BreadPlayer.Behaviours"
    mc:Ignorable="d">
    <Page.Resources>
        <!--<Canvas x:Name="appbar_chevron_down" Width="76" Height="76" Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
            <Path Width="28.5" Height="25.3333" Canvas.Left="23.6016" Canvas.Top="24.9375" Stretch="Fill" Fill="#FF000000" Data="F1 M 37.8516,39.5833L 52.1016,24.9375L 52.1016,35.2292L 37.8516,50.2708L 23.6016,35.2292L 23.6016,24.9375L 37.8516,39.5833 Z "/>
        </Canvas>-->
        <Converters:SelectedItemToValueConverter x:Key="ItemToValue"/>
    </Page.Resources>
    <Grid Margin="25,0,0,0" Name="ParentGrid" DataContext="{Binding Source={StaticResource Core}, Path=SettingsVM}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding ElementName=showhideListBtn, Path=IsChecked}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="showSymbol.Text" Value="&#xE010;  "/>
                        <Setter Target="showLabel.Text" Value="Show less"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="libraryGrid.MinWidth" Value="400"/>
                        <Setter Target="fileList.MaxWidth" Value="400"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ParentGrid.Margin" Value="10,0,0,0"/>
                        <Setter Target="libraryGrid.MinWidth" Value="300"/>
                        <Setter Target="libraryGrid.HorizontalAlignment" Value="Stretch"/>
                        <Setter Target="fileList.HorizontalAlignment" Value="Stretch"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" MinHeight="47"/>
            <RowDefinition Height="13" MinHeight="13"/>
            <RowDefinition Height="57*"/>
        </Grid.RowDefinitions>
      
        <Pivot Grid.Row="2">
            <Pivot.HeaderTemplate>
                <DataTemplate>
                    <TextBlock x:Name="headerText" Text="{Binding}" FontSize="28" FontFamily="Segoe UI" FontWeight="Bold" />
                </DataTemplate>
            </Pivot.HeaderTemplate>
            <PivotItem Header="General">
                <StackPanel MaxWidth="500" HorizontalAlignment="Left">
                    <TextBlock Text="Lockscreen" FontWeight="Bold" FontSize="18"/>
                    <CheckBox Margin="0,0,0,0" Content="Prevent screen from locking." IsChecked="{Binding Path=PreventScreenFromLocking, Mode=TwoWay}"/>
                    <TextBlock TextWrapping="Wrap" FontSize="11" Foreground="Gray">
                        <Run Text="Enabling this will prevent the OS from locking the screen after regular intervals. "/>
                        <Bold>This feature is extremely battery consuming and hence, is not persisted through sessions.</Bold>
                    </TextBlock>
                    <CheckBox Margin="0,0,0,0" Content="Replace lockscreen wallpaper with album art." IsChecked="{Binding ReplaceLockscreenWithAlbumArt, Mode=TwoWay}"/>
                    <TextBlock TextWrapping="Wrap" FontSize="11" Foreground="Gray">
                        <Run Text="This will replace the lockscreen wallpaper with currently playing song's album art. "/>
                        <Bold>Rest assured that your lockscreen wallpaper will be automatically resetted when you exit the app.</Bold>
                    </TextBlock>                
                </StackPanel>
            </PivotItem>
            
            <PivotItem Header="Library">
                <StackPanel x:Name="libraryGrid" MaxWidth="500" HorizontalAlignment="Left">
                    <TextBlock x:Name="importHeader" Text="Import Breads" FontWeight="Bold" FontSize="18"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="importFolderBtn" FontSize="16" Padding="0" Margin="0" Content="Import folders to your library" HorizontalContentAlignment="Left" Command="{Binding LoadCommand}" Style="{StaticResource HyperlinkBtn}" Background="{x:Null}" HorizontalAlignment="Stretch"/>
                        <ToggleButton Grid.Column="1" x:Name="showhideListBtn" Padding="0" Background="{x:Null}" BorderBrush="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource HyperlinkToggleBtn}" Margin="3,4,0,0" Height="20" >
                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                <TextBlock x:Name="showSymbol"  Text="&#xE011;  " FontSize="13" VerticalAlignment="Center" FontFamily="Segoe MDL2 Assets"/>
                                <TextBlock x:Name="showLabel" FontSize="16" Text="Show more" VerticalAlignment="Center"/>
                            </StackPanel>
                        </ToggleButton>
                    </Grid>
                    <TextBlock x:Name="importHelp" Text="Imported file types are MP3, WAV, OGG, FLAC, M4A, AIF, WMA" TextWrapping="Wrap" Foreground="Gray"  FontSize="11"/>

                    <!--<ToggleSwitch x:Name="showhideListBtn" IsOn="False" OffContent="Hide List" OnContent="Show List" Margin="105,0,0,0"></ToggleSwitch>-->
                    <ListBox x:Name="fileList" Visibility="{Binding ElementName=showhideListBtn, Path=IsChecked, Converter={StaticResource BoolToVisibilty}}" HorizontalAlignment="Left" Height="200" Background="{ThemeResource ThemeBackground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.HorizontalScrollMode="Auto" Margin="0,10,10,0" ItemsSource="{Binding LibraryFoldersCollection}">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding DisplayName}" MaxWidth="200" TextTrimming="CharacterEllipsis"/>
                                    <TextBlock Text="{Binding Path}" Margin="20,0,0,0" TextWrapping="NoWrap" TextTrimming="None"/>

                                    <FlyoutBase.AttachedFlyout>
                                        <MenuFlyout>
                                            <MenuFlyoutItem Text="Delete"/>
                                        </MenuFlyout>
                                    </FlyoutBase.AttachedFlyout>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Button x:Name="importPlistBtn" Padding="0" Content="Import playlists" Grid.Column="0" Margin="0,10,10,0" HorizontalContentAlignment="Left" Command="{Binding ImportPlaylistCommand}" Style="{StaticResource HyperlinkBtn}" Background="{x:Null}" Height="28" HorizontalAlignment="Stretch"/>
                    <TextBlock x:Name="importPlaylistsHelp" Margin="0,-4,0,0" Text="Supported playlists are M3U and PLS." TextWrapping="Wrap" Foreground="Gray"  FontSize="11"/>
                    <TextBlock x:Name="resetHeader" Margin="0,10,0,0"  Text="Reset BreadPlayer" FontWeight="Bold"  FontSize="18"/>

                    <Button FontSize="16" Padding="0" Content="Reset Everything" Grid.Column="0" Margin="0,0,10,0" HorizontalContentAlignment="Left" Command="{Binding ResetCommand}" Style="{StaticResource HyperlinkBtn}" Background="{x:Null}" Height="28" HorizontalAlignment="Stretch"/>
                    <TextBlock Margin="0,-4,0,0" Text="This will reset your library, playlists, settings, play history etc." TextWrapping="Wrap" Foreground="Gray"  FontSize="11"/>

                </StackPanel>
            </PivotItem>            
            
            <PivotItem Header="Personalization">
                <StackPanel MaxWidth="500" HorizontalAlignment="Left">
                    <TextBlock Text="Appearence" FontSize="18" FontWeight="Bold"/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center">
                                    <Run Text="Theme:"/>
                                    <LineBreak/>
                                    <Run Text="Change of theme requires shutdown." FontSize="11" Foreground="Gray"/>
                        </TextBlock>
                        <ToggleSwitch Grid.Column="1" x:Name="themeChange" OffContent="Dark" IsOn="{Binding IsThemeDark, Mode=TwoWay}" OnContent="Light" HorizontalAlignment="Left" VerticalAlignment="Center"></ToggleSwitch>

                        <TextBlock Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" TextWrapping="Wrap" x:Name="uiTextTypeText">
                            <Run Text="Font Capitilization:"/>
                            <LineBreak/>
                            <Run FontSize="11" Text="This changes the text capitalization of the UI." Foreground="Gray"/>
                        </TextBlock>
                        <ComboBox Grid.Row="1" VerticalAlignment="Center"  x:Name="uiTextType_ComboBox" Grid.Column="1" HorizontalAlignment="Left" SelectedItem="{Binding UITextType, Mode=TwoWay}">
                            <x:String>Normal</x:String>
                            <x:String>All Capitals</x:String>
                        </ComboBox>
                    </Grid>
                    <CheckBox Margin="0,10,0,0" Content="Change Accent Color By Album Art" IsChecked="{Binding ChangeAccentByAlbumArt, Mode=TwoWay}"/>
                    <TextBlock Text="Enabling this makes the player adapt the accent color according to the album art of the currently playing song." TextWrapping="Wrap" FontSize="11" Foreground="Gray"/>
                </StackPanel>
            </PivotItem>
            
            <PivotItem Header="About">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="400*"/>
                        <ColumnDefinition Width="400*"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.ColumnSpan="2" MaxWidth="700" HorizontalAlignment="Left">
                        <TextBlock Margin="0,10,10,0" Text="v2.0-beta (nightly)"/>
                        <TextBlock Margin="0,10,10,0" Text="Copyright © 2016 Abdullah Atta"/>
                        <TextBlock Margin="0,10,10,0" HorizontalAlignment="Left" TextWrapping="Wrap">
                      <Run FontSize="12">
                              This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.
                            </Run>
                          <LineBreak/>
                        <Run FontSize="12">
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
                      </Run>
                        </TextBlock>
                        <TextBlock Margin="0,10,10,0" TextWrapping="Wrap">
                       <Run FontWeight="Medium" FontSize="14">
                           BreadPlayer emerges with the hard work of these great people, to whom we are very grateful:
                   </Run> 
                           <LineBreak/>
                    <Run FontStyle="Italic" FontSize="13">DannyTalent, Bond-009, MightyK1337, Kai Hildebrandt, Ammar Ahmed, Vladislav Sarunov</Run>
                    <LineBreak/>
                        <LineBreak/>
                        <Run FontWeight="Medium" FontSize="14">Our thanks to all these artists and TheNounProject for providing a wonderful library of icons:</Run>
                        <LineBreak/>
                       <Run FontStyle="Italic" FontSize="13">Stefano Vetere, Umar Irshad, Golden Roof, Milky - Digital innovation</Run>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </PivotItem>
        </Pivot>

    </Grid>
</Page>
